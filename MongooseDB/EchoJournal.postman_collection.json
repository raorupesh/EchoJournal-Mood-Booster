{
	"info": {
		"_postman_id": "368f55ab-8615-4a9f-82a2-a45e57803075",
		"name": "EchoJournal",
		"description": "API collection for testing Journal and Emotion entries",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19201630"
	},
	"item": [
		{
			"name": "Journal Entries",
			"item": [
				{
					"name": "Create Journal Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"const jsonResponse = pm.response.json();\r",
									"\r",
									"// Extract the _id\r",
									"const JournalId = jsonResponse.data._id;\r",
									"\r",
									"// Store the _id in an environment variable\r",
									"pm.environment.set(\"JournalId\", JournalId);\r",
									"\r",
									"// Log the _id to the console for verification\r",
									"console.log(\"Stored JournalId:\", JournalId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1,\n    \"content\": \"Today was a productive day. I managed to complete all my tasks and had time for a relaxing evening.\",\n    \"feelings\": [\"productive\", \"satisfied\", \"content\"],\n    \"date\": \"2025-05-04T12:00:00Z\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/app/journal/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"journal",
								""
							]
						},
						"description": "Create a new journal entry"
					},
					"response": []
				},
				{
					"name": "Get Recent Journal Entries",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/app/journal/recent/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"journal",
								"recent",
								"1"
							]
						},
						"description": "Get recent journal entries for a user"
					},
					"response": []
				},
				{
					"name": "Get All Journal Entries (Paginated)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/app/journal/all/1?page=1&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"journal",
								"all",
								"1"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all journal entries for a user with pagination"
					},
					"response": []
				},
				{
					"name": "Get Specific Journal Entry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/app/journal/{{JournalId}}/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"journal",
								"{{JournalId}}",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for managing journal entries"
		},
		{
			"name": "Emotion Entries",
			"item": [
				{
					"name": "Create Emotion Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1,\n    \"moodScore\": 7,\n    \"feelings\": [\"calm\", \"focused\", \"relaxed\"],\n    \"people\": [\"coworkers\", \"manager\"],\n    \"place\": [\"office\", \"meeting room\"],\n    \"date\": \"2025-05-04T14:30:00Z\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/app/emotion/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"emotion",
								""
							]
						},
						"description": "Create a new emotion entry"
					},
					"response": []
				},
				{
					"name": "Get Monthly Emotions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/app/emotion/monthly/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"emotion",
								"monthly",
								"1"
							]
						},
						"description": "Get monthly emotion data for a user"
					},
					"response": []
				},
				{
					"name": "Get All Emotion Entries",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/app/emotion/all/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"app",
								"emotion",
								"all",
								"1"
							]
						},
						"description": "Get all emotion entries for a user"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing emotion entries"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract journal entry ID from create response",
					"if (pm.response.code === 201 && pm.request.url.toString().includes('/app/journal/')) {",
					"    const responseData = pm.response.json();",
					"    if (responseData.success && responseData.data && responseData.data._id) {",
					"        pm.collectionVariables.set('journalEntryId', responseData.data._id);",
					"        console.log('Saved journal entry ID: ' + responseData.data._id);",
					"    }",
					"}",
					"",
					"// Auto-extract emotion entry ID from create response",
					"if (pm.response.code === 201 && pm.request.url.toString().includes('/app/emotion/')) {",
					"    const responseData = pm.response.json();",
					"    if (responseData.success && responseData.data && responseData.data._id) {",
					"        pm.collectionVariables.set('emotionEntryId', responseData.data._id);",
					"        console.log('Saved emotion entry ID: ' + responseData.data._id);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "journalEntryId",
			"value": "",
			"type": "string"
		},
		{
			"key": "emotionEntryId",
			"value": "",
			"type": "string"
		}
	]
}